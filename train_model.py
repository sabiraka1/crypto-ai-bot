import pandas as pd
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
import joblib
import os

CSV_FILE = "sinyal_fiyat_analizi.csv"
MODEL_PATH = "models/ai_model.pkl"

def encode_signal(signal):
    return {'BUY': 1, 'SELL': -1, 'NONE': 0}.get(signal, 0)

def train_model():
    if not os.path.exists(CSV_FILE):
        print("‚ö†Ô∏è CSV-—Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω. –û–±—É—á–µ–Ω–∏–µ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.")
        return

    df = pd.read_csv(CSV_FILE)

    if len(df) < 10:
        print("‚ö†Ô∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–±—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–∏.")
        return

    # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤
    df["signal_encoded"] = df["signal"].apply(encode_signal)
    df["target"] = df["success"].astype(int)

    X = df[["rsi", "macd", "signal_encoded"]]
    y = df["target"]

    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

    model = RandomForestClassifier(n_estimators=100, random_state=42)
    model.fit(X_train, y_train)

    y_pred = model.predict(X_test)
    acc = accuracy_score(y_test, y_pred)
    print(f"‚úÖ –ú–æ–¥–µ–ª—å –æ–±—É—á–µ–Ω–∞. Accuracy: {acc:.2f}")

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º
    os.makedirs("models", exist_ok=True)
    joblib.dump(model, MODEL_PATH)
    print("üíæ –ú–æ–¥–µ–ª—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞:", MODEL_PATH)
