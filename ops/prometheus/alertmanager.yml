global:
  resolve_timeout: 5m
  telegram_api_url: https://api.telegram.org

route:
  receiver: default
  group_by: ['alertname','severity','symbol']
  group_wait: 10s
  group_interval: 30s
  repeat_interval: 4h
  routes:
    - match:
        severity: critical
      receiver: telegram-critical
      repeat_interval: 15m
    - match:
        severity: warning
      receiver: telegram-warnings
      group_wait: 5m
      group_interval: 5m
      repeat_interval: 1h
    - match:
        alertname: DrawdownLimit
      receiver: risk-manager
      repeat_interval: 5m

receivers:
  - name: default

  - name: telegram-critical
    telegram_configs:
      - bot_token: '${TELEGRAM_BOT_TOKEN}'
        chat_id: '${TELEGRAM_ALERT_CHAT_ID}'
        parse_mode: HTML
        send_resolved: true
        message: |
          üö® <b>{{ .CommonLabels.alertname }}</b>
          {{- range .Alerts }}
          ‚Ä¢ <b>Symbol:</b> {{ .Labels.symbol }}
          ‚Ä¢ <b>Value:</b> {{ .Value }}
          ‚Ä¢ <b>Summary:</b> {{ .Annotations.summary }}
          ‚Ä¢ <b>Started:</b> {{ .StartsAt.Format "2006-01-02 15:04:05" }}
          {{- end }}

  - name: telegram-warnings
    telegram_configs:
      - bot_token: '${TELEGRAM_BOT_TOKEN}'
        chat_id: '${TELEGRAM_ALERT_CHAT_ID}'
        parse_mode: Markdown
        send_resolved: true
        message: |
          ‚ö†Ô∏è *{{ .CommonLabels.alertname }}*
          Count: {{ len .Alerts }}

  - name: risk-manager
    webhook_configs:
      - url: '${RISK_WEBHOOK_URL}'
        send_resolved: false
        http_config:
          bearer_token: '${RISK_WEBHOOK_TOKEN}'

inhibit_rules:
  - source_match:
      severity: 'critical'
    target_match:
      severity: 'warning'
    equal: ['alertname','symbol']
