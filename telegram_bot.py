# telegram_bot.py

import os
import telebot
from sinyal_skorlayici import evaluate_signal
from technical_analysis import generate_signal
from data_logger import log_test_trade
from signal_analyzer import analyze_bad_signals
from profit_chart import generate_profit_chart
from position_status import get_position_status
from train_model import train_model

BOT_TOKEN = os.getenv("BOT_TOKEN")
CHAT_ID = int(os.getenv("CHAT_ID", "0"))
bot = telebot.TeleBot(BOT_TOKEN)


def handle_telegram_command(data):
    try:
        message = data['message']
        text = message.get("text", "")
        chat_id = message["chat"]["id"]

        if text.startswith("/start") or text.startswith("/help"):
            bot.send_message(chat_id,
                "ü§ñ –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç 24/7!\n\n"
                "üìå –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
                "/test ‚Äî —Ä—É—á–Ω–æ–π —Ç–µ—Å—Ç —Å–∏–≥–Ω–∞–ª–∞\n"
                "/train ‚Äî –ø–µ—Ä–µ–æ–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏\n"
                "/status ‚Äî —Ç–µ–∫—É—â–∞—è –ø–æ–∑–∏—Ü–∏—è\n"
                "/profit ‚Äî –≥—Ä–∞—Ñ–∏–∫ –ø—Ä–∏–±—ã–ª–∏\n"
                "/errors ‚Äî –æ—à–∏–±–∫–∏ —Å–∏–≥–Ω–∞–ª–æ–≤"
            )

        elif text.startswith("/test"):
            result = generate_signal()
            signal = result["signal"]
            rsi = result["rsi"]
            macd = result["macd"]
            price = result["price"]
            score = evaluate_signal(result)

            log_test_trade(signal, score, price, rsi, macd)

            msg = (
                f"üß™ –†—É—á–Ω–æ–π —Ç–µ—Å—Ç —Å–∏–≥–Ω–∞–ª–∞:\n"
                f"–°–∏–≥–Ω–∞–ª: {signal}\n"
                f"RSI: {rsi:.2f}\n"
                f"MACD: {macd:.2f}\n"
                f"–¶–µ–Ω–∞: {price:.2f}\n"
                f"ü§ñ –û—Ü–µ–Ω–∫–∞ AI: {score:.2f}"
            )
            bot.send_message(chat_id, msg)

        elif text.startswith("/train"):
            message = train_model()
            bot.send_message(chat_id, message)

        elif text.startswith("/status"):
            status = get_position_status()
            bot.send_message(chat_id, status)

        elif text.startswith("/profit"):
            image_path = generate_profit_chart()
            if image_path:
                with open(image_path, "rb") as photo:
                    bot.send_photo(chat_id, photo)
            else:
                bot.send_message(chat_id, "‚ö†Ô∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞.")

        elif text.startswith("/errors"):
            summary, explanations = analyze_bad_signals()
            if summary:
                text_lines = [f"{k}: {v}" for k, v in summary.items()]
                summary_text = "üìä –û—à–∏–±–∫–∏ —Å–∏–≥–Ω–∞–ª–æ–≤:\n" + "\n".join(text_lines)
                bot.send_message(chat_id, summary_text)

                if explanations:
                    expl = "\n\n".join(explanations)
                    bot.send_message(chat_id, f"üß† –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—à–∏–±–∫–∏:\n{expl}")
            else:
                bot.send_message(chat_id, "‚úÖ –û—à–∏–±–æ–∫ —Å–∏–≥–Ω–∞–ª–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö.")
        else:
            bot.send_message(chat_id, "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ù–∞–ø–∏—à–∏ /help –¥–ª—è —Å–ø–∏—Å–∫–∞.")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã: {e}")
