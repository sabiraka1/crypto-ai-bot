from flask import Flask, request
from apscheduler.schedulers.background import BackgroundScheduler
from trading_bot import check_and_trade, clean_logs
from telegram_bot import handle_command
import os
import logging
import telebot
import dotenv

dotenv.load_dotenv()

BOT_TOKEN = os.getenv("BOT_TOKEN")
WEBHOOK_URL = os.getenv("WEBHOOK_URL")  # https://yourdomain.com/webhook

app = Flask(__name__)
logging.basicConfig(level=logging.INFO)

scheduler = BackgroundScheduler()
scheduler.add_job(check_and_trade, 'interval', minutes=15)
scheduler.add_job(clean_logs, 'cron', hour=0)
scheduler.start()
logging.info("‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–ø—É—â–µ–Ω (—Ç—Ä–µ–π–¥–∏–Ω–≥ + –æ—á–∏—Å—Ç–∫–∞)")

bot = telebot.TeleBot(BOT_TOKEN)

@app.route("/webhook", methods=["POST"])
def webhook():
    data = request.json
    logging.info(f"üì® –ü–æ–ª—É—á–µ–Ω POST –∑–∞–ø—Ä–æ—Å –Ω–∞ /webhook")
    logging.info(f"üì® –î–∞–Ω–Ω—ã–µ webhook: {data}")

    if "message" in data:
        try:
            handle_command(data["message"])  # üëà –∫–ª—é—á–µ–≤–æ–π –≤—ã–∑–æ–≤!
        except Exception as e:
            logging.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ webhook: {e}")
    return "ok", 200

@app.route("/")
def home():
    return "ü§ñ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!", 200

if __name__ == "__main__":
    logging.info("üì° –£—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook...")
    bot.remove_webhook()
    bot.set_webhook(url=WEBHOOK_URL)
    logging.info("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    app.run(host="0.0.0.0", port=10000)
