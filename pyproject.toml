[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "crypto-ai-bot"
version = "0.1.0"
description = "ASGI trading bot on FastAPI with ccxt, SQLite, metrics and Telegram webhook."
readme = "README.md"
requires-python = ">=3.12"
license = { text = "MIT" }
authors = [{ name = "Sabir Şahbaz" }]

dependencies = [
  "fastapi>=0.115,<1.0",
  "uvicorn[standard]>=0.30,<0.31",
  "gunicorn>=21.2,<22",
  "httpx>=0.27,<0.28",
  "ccxt>=4.2,<5",
  "prometheus-client>=0.20,<0.21",
  "pydantic>=2.7,<3",
]

[project.optional-dependencies]
# Подключай по желанию: pip install .[charts]
charts = [
  "matplotlib>=3.8,<3.10",
]
# Для бэктеста/аналитики: pip install .[backtest]
backtest = [
  "numpy>=1.26,<2.0",
  "pandas>=2.2,<3.0",
]
# Инструменты разработчика: pip install .[dev]
dev = [
  "pytest>=8.2,<9",
  "ruff>=0.6,<0.7",
  "pre-commit>=3.6,<4",
]

[tool.setuptools]
package-dir = { "" = "src" }

[tool.setuptools.packages.find]
where = ["src"]
include = ["crypto_ai_bot*"]

# -------------------------------
# Kачество кода / линтинг (Ruff)
# Запрещаем прямой доступ к ENV
# -------------------------------
[tool.ruff]
line-length = 100
target-version = "py312"

[tool.ruff.lint]
select = ["E","F","W","I","B","C4","PIE","PT","RUF"]
ignore = ["E501"]

# Баним прямое использование ENV за пределами EnvReader
[tool.ruff.lint.flake8-tidy-imports.banned-api]
"os.getenv" = { msg = "Use EnvReader/Settings instead of os.getenv (see core/config/env_reader.py)" }
"os.environ" = { msg = "Use EnvReader/Settings instead of os.environ (see core/config/env_reader.py)" }

[tool.ruff.lint.per-file-ignores]
"src/crypto_ai_bot/core/config/env_reader.py" = ["E402"]
