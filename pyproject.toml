[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "crypto-ai-bot"
version = "0.1.0"
description = "Production-ready ASGI trading bot with Gate.io integration, protective exits, and full reconciliation"
readme = "README.md"
requires-python = ">=3.12"
license = { text = "MIT" }
authors = [{ name = "Sabir Şahbaz" }]

# === КРИТИЧЕСКИЕ ЗАВИСИМОСТИ ===
dependencies = [
  "fastapi>=0.115,<1.0",
  "uvicorn[standard]>=0.30,<0.31", 
  "gunicorn>=21.2,<22",
  "httpx>=0.27,<0.28",
  "ccxt>=4.2,<5",
  "prometheus-client>=0.20,<0.21",
  "pydantic>=2.7,<3",
  "requests>=2.31,<3",
]

[project.optional-dependencies]
production = [
  "psycopg2-binary>=2.9,<3",
  "redis>=5.0,<6",
  "celery>=5.3,<6",
]
charts = ["matplotlib>=3.8,<3.10"]
backtest = [
  "numpy>=1.26,<2.0",
  "pandas>=2.2,<3.0",
]
dev = [
  "pytest>=8.2,<9",
  "pytest-asyncio>=0.23,<1",
  "pytest-mock>=3.12,<4",
  "ruff>=0.6,<0.7",
  "pre-commit>=3.6,<4",
  "mypy>=1.8,<2",
  "coverage>=7.4,<8",
]
monitoring = [
  "structlog>=24.1,<25",
  "sentry-sdk[fastapi]>=1.40,<2",
]

[tool.setuptools]
package-dir = { "" = "src" }

[tool.setuptools.packages.find]
where = ["src"]
include = ["crypto_ai_bot*"]

[tool.ruff]
line-length = 100
target-version = "py312"

[tool.ruff.lint]
select = ["E","F","W","I","B","C4","PIE","PT","RUF","UP","SIM"]
ignore = ["E501", "B008"]

[tool.ruff.lint.flake8-tidy-imports.banned-api]
"os.getenv" = { msg = "Use Settings instead of os.getenv (see core/settings.py)" }
"os.environ" = { msg = "Use Settings instead of os.environ (see core/settings.py)" }
"requests.get" = { msg = "Use utils/http_client.py instead of direct requests" }
"requests.post" = { msg = "Use utils/http_client.py instead of direct requests" }
"urllib.request" = { msg = "Use utils/http_client.py for HTTP calls" }
"time.sleep" = { msg = "Use asyncio.sleep in async code" }

[tool.ruff.lint.per-file-ignores]
"src/crypto_ai_bot/core/config/env_reader.py" = ["E402"]
"src/crypto_ai_bot/utils/http_client.py" = ["E402"]
"tests/**/*.py" = ["S101", "S106"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
no_implicit_optional = true
strict_optional = true

[[tool.mypy.overrides]]
module = "ccxt.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "prometheus_client.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "8.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=crypto_ai_bot",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html",
    "--cov-fail-under=80",
]
testpaths = ["tests"]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["crypto_ai_bot"]
omit = [
    "*/tests/*",
    "*/backtest/*",
    "*/types/*",
    "*/analytics/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
