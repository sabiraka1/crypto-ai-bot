[importlinter]
root_package = crypto_ai_bot
include_external_packages = False
cache_dir = .import_linter_cache

[settings]
# No global ignore; everything is controlled by explicit contracts.

# ───────────────────────────────────────────────────────────────────────────────
# LAYERS: Clean architecture (outer → inner)
# app (entrypoints: API/Bot/compose)
# core.infrastructure (adapters: broker/DB/HTTP/etc)
# core.application (use cases, orchestrator, risk, ports)
# core.domain (models, invariants, strategies)
# ───────────────────────────────────────────────────────────────────────────────
[contract:layers_clean_arch]
name = Clean architecture layers
type = layers
layers =
    crypto_ai_bot.app
    crypto_ai_bot.core.infrastructure
    crypto_ai_bot.core.application
    crypto_ai_bot.core.domain
ignore_imports =
    tests -> *
    scripts -> *
    crypto_ai_bot.core.infrastructure.storage.migrations -> *

# ───────────────────────────────────────────────────────────────────────────────
# Domain must be pure (no outward deps)
# ───────────────────────────────────────────────────────────────────────────────
[contract:domain_must_be_pure]
name = Domain must not depend on outer layers
type = forbidden
source_modules =
    crypto_ai_bot.core.domain
forbidden_modules =
    crypto_ai_bot.core.application
    crypto_ai_bot.core.infrastructure
    crypto_ai_bot.app

# ───────────────────────────────────────────────────────────────────────────────
# Application must not depend on infrastructure or app
# ───────────────────────────────────────────────────────────────────────────────
[contract:application_cannot_depend_on_infra]
name = Application must not depend on infrastructure or app
type = forbidden
source_modules =
    crypto_ai_bot.core.application
forbidden_modules =
    crypto_ai_bot.core.infrastructure
    crypto_ai_bot.app

# ───────────────────────────────────────────────────────────────────────────────
# Infrastructure may import only application.ports (and domain), not use_cases/orchestrator
# ───────────────────────────────────────────────────────────────────────────────
[contract:infra_depends_only_on_ports]
name = Infrastructure may import only application.ports
type = forbidden
source_modules =
    crypto_ai_bot.core.infrastructure
forbidden_modules =
    crypto_ai_bot.core.application.use_cases
    crypto_ai_bot.core.application.orchestrator
    crypto_ai_bot.core.application.*
ignore_imports =
    crypto_ai_bot.core.application.ports -> *

# ───────────────────────────────────────────────────────────────────────────────
# Infrastructure subpackages are independent (brokers !-> storage, etc.)
# ───────────────────────────────────────────────────────────────────────────────
[contract:infra_sections_independent]
name = Infrastructure sections are independent
type = independence
modules =
    crypto_ai_bot.core.infrastructure.brokers
    crypto_ai_bot.core.infrastructure.storage
    crypto_ai_bot.core.infrastructure.events
    crypto_ai_bot.core.infrastructure.macro

# ───────────────────────────────────────────────────────────────────────────────
# Domain subpackages stay pure (no infra/app/use_cases)
# ───────────────────────────────────────────────────────────────────────────────
[contract:domain_subpackages_are_pure]
name = Domain subpackages must be pure
type = forbidden
source_modules =
    crypto_ai_bot.core.domain.macro
    crypto_ai_bot.core.domain.strategies
    crypto_ai_bot.core.domain.signals
forbidden_modules =
    crypto_ai_bot.core.infrastructure
    crypto_ai_bot.app
    crypto_ai_bot.core.application

[whitelist]
modules =
    tests
    scripts
    crypto_ai_bot.core.infrastructure.storage.migrations
