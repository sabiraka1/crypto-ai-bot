[importlinter]
root_package = crypto_ai_bot
include_external_packages = False
cache_dir = .import_linter_cache

[settings]
# ═══════════════════════════════════════════════════════════════════════════════
# CRYPTO AI BOT ARCHITECTURE CONTRACTS (v1.0-beta)
# ═══════════════════════════════════════════════════════════════════════════════

# ───────────────────────────────────────────────────────────────────────────────
# CLEAN ARCHITECTURE LAYERS (strictest first)
# ───────────────────────────────────────────────────────────────────────────────
[contract:layers_clean_arch]
name = Clean architecture layers (outer → inner)
type = layers
layers =
    crypto_ai_bot.app
    crypto_ai_bot.cli
    crypto_ai_bot.core.infrastructure  
    crypto_ai_bot.core.application
    crypto_ai_bot.core.domain
    crypto_ai_bot.utils
ignore_imports =
    tests -> *
    scripts -> *
    crypto_ai_bot.core.infrastructure.storage.migrations -> *

# ───────────────────────────────────────────────────────────────────────────────
# DOMAIN PURITY (business logic only) 
# ───────────────────────────────────────────────────────────────────────────────
[contract:domain_must_be_pure]
name = Domain cannot depend on outer layers
type = forbidden
source_modules =
    crypto_ai_bot.core.domain
forbidden_modules =
    crypto_ai_bot.core.application
    crypto_ai_bot.core.infrastructure
    crypto_ai_bot.app
    crypto_ai_bot.cli

# ───────────────────────────────────────────────────────────────────────────────
# APPLICATION LAYER RULES (use cases and orchestration)
# ───────────────────────────────────────────────────────────────────────────────
[contract:application_cannot_depend_on_app]
name = Application cannot depend on app layer
type = forbidden
source_modules =
    crypto_ai_bot.core.application
forbidden_modules =
    crypto_ai_bot.app
    crypto_ai_bot.cli

[contract:application_uses_infrastructure_only_via_ports]
name = Application uses infrastructure only through ports
type = forbidden
source_modules =
    crypto_ai_bot.core.application
forbidden_modules =
    crypto_ai_bot.core.infrastructure
ignore_imports =
    crypto_ai_bot.core.application.ports -> *

# ───────────────────────────────────────────────────────────────────────────────
# MACRO SOURCES IN INFRASTRUCTURE (CRITICAL FIX)
# ───────────────────────────────────────────────────────────────────────────────
[contract:macro_sources_in_infrastructure]
name = Macro HTTP sources must be in infrastructure
type = forbidden  
source_modules =
    crypto_ai_bot.app
forbidden_modules =
    crypto_ai_bot.core.infrastructure.macro_sources
ignore_imports =
    crypto_ai_bot.app.compose -> crypto_ai_bot.core.infrastructure.macro_sources

[contract:regime_detector_uses_macro_via_ports]
name = RegimeDetector uses macro sources via ports
type = forbidden
source_modules =
    crypto_ai_bot.core.domain.macro.regime_detector
forbidden_modules =
    crypto_ai_bot.core.infrastructure.macro_sources

# ───────────────────────────────────────────────────────────────────────────────
# SINGLE POINTS OF TRUTH (from README)
# ───────────────────────────────────────────────────────────────────────────────
[contract:single_execute_trade_path]
name = Only execute_trade.py can place orders
type = forbidden
source_modules =
    crypto_ai_bot.core.application
forbidden_modules =
    crypto_ai_bot.core.infrastructure.brokers
ignore_imports =
    crypto_ai_bot.core.application.use_cases.execute_trade -> *

[contract:risk_centralization]
name = Risk logic must go through RiskManager
type = forbidden
source_modules =
    crypto_ai_bot.core.application
forbidden_modules =
    crypto_ai_bot.core.domain.risk.rules
ignore_imports =
    crypto_ai_bot.core.domain.risk.manager -> *

[contract:settings_centralization]
name = Only settings.py can access ENV
type = forbidden
source_modules =
    crypto_ai_bot.core.domain
    crypto_ai_bot.core.application
    crypto_ai_bot.utils
forbidden_modules =
    os
ignore_imports =
    crypto_ai_bot.core.infrastructure.settings -> os

# ───────────────────────────────────────────────────────────────────────────────
# UTILS INDEPENDENCE (lowest layer)
# ───────────────────────────────────────────────────────────────────────────────
[contract:utils_are_standalone]
name = Utils cannot depend on business logic
type = forbidden
source_modules =
    crypto_ai_bot.utils
forbidden_modules =
    crypto_ai_bot.core.domain
    crypto_ai_bot.core.application
    crypto_ai_bot.core.infrastructure
    crypto_ai_bot.app
    crypto_ai_bot.cli