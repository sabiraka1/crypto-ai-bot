[importlinter]
root_package = crypto_ai_bot
include_external_packages = False
cache_dir = .import_linter_cache

# ═══════════════════════════════════════════════════════
# CLEAN ARCHITECTURE LAYERS
# ═══════════════════════════════════════════════════════
[contract:layers_clean_arch]
name = Clean architecture layers (outer → inner)
type = layers
layers =
    crypto_ai_bot.app
    crypto_ai_bot.core.infrastructure
    crypto_ai_bot.core.application
    crypto_ai_bot.core.domain
ignore_imports =
    tests -> *
    scripts -> *
    crypto_ai_bot.core.infrastructure.storage.migrations -> *

# ═══════════════════════════════════════════════════════
# DOMAIN PURITY
# ═══════════════════════════════════════════════════════
[contract:domain_must_be_pure]
name = Domain cannot depend on outer layers
type = forbidden
source_modules =
    crypto_ai_bot.core.domain
forbidden_modules =
    crypto_ai_bot.core.application
    crypto_ai_bot.core.infrastructure
    crypto_ai_bot.app

[contract:domain_subpackages_are_pure]
name = Domain subpackages must be pure
type = forbidden
source_modules =
    crypto_ai_bot.core.domain.strategies
    crypto_ai_bot.core.domain.signals
    crypto_ai_bot.core.domain.risk
    crypto_ai_bot.core.domain.macro
forbidden_modules =
    crypto_ai_bot.core.infrastructure
    crypto_ai_bot.core.application
    crypto_ai_bot.app

# ═══════════════════════════════════════════════════════
# APPLICATION LAYER
# ═══════════════════════════════════════════════════════
[contract:application_cannot_depend_on_infra]
name = Application cannot depend on infrastructure
type = forbidden
source_modules =
    crypto_ai_bot.core.application
forbidden_modules =
    crypto_ai_bot.core.infrastructure
    crypto_ai_bot.app
ignore_imports =
    crypto_ai_bot.core.application.ports -> *

[contract:application_uses_only_ports]
name = Application uses only ports for infrastructure
type = forbidden
source_modules =
    crypto_ai_bot.core.application.use_cases
    crypto_ai_bot.core.application.orchestrator
    crypto_ai_bot.core.application.reconciliation
    crypto_ai_bot.core.application.monitoring
    crypto_ai_bot.core.application.regime
forbidden_modules =
    crypto_ai_bot.core.infrastructure.brokers
    crypto_ai_bot.core.infrastructure.storage
    crypto_ai_bot.core.infrastructure.events
    crypto_ai_bot.core.infrastructure.market_data
    crypto_ai_bot.core.infrastructure.safety
    crypto_ai_bot.core.infrastructure.macro

# ═══════════════════════════════════════════════════════
# INFRASTRUCTURE RULES
# ═══════════════════════════════════════════════════════
[contract:infra_depends_only_on_ports]
name = Infrastructure can only import application ports
type = forbidden
source_modules =
    crypto_ai_bot.core.infrastructure
forbidden_modules =
    crypto_ai_bot.core.application.use_cases
    crypto_ai_bot.core.application.orchestrator
    crypto_ai_bot.core.application.reconciliation
    crypto_ai_bot.core.application.monitoring
    crypto_ai_bot.core.application.regime
ignore_imports =
    crypto_ai_bot.core.application.ports -> *
    crypto_ai_bot.core.application.events_topics -> *

[contract:infra_sections_independent]
name = Infrastructure sections are independent
type = independence
modules =
    crypto_ai_bot.core.infrastructure.brokers
    crypto_ai_bot.core.infrastructure.storage
    crypto_ai_bot.core.infrastructure.events
    crypto_ai_bot.core.infrastructure.market_data
    crypto_ai_bot.core.infrastructure.safety
    crypto_ai_bot.core.infrastructure.macro

# ═══════════════════════════════════════════════════════
# TRADING SPECIFIC RULES
# ═══════════════════════════════════════════════════════
[contract:no_direct_ccxt_in_domain]
name = Domain cannot import CCXT directly
type = forbidden
source_modules =
    crypto_ai_bot.core.domain
    crypto_ai_bot.core.application
forbidden_modules =
    ccxt

[contract:settings_centralization]
name = Only settings module can import os/environ
type = forbidden
source_modules =
    crypto_ai_bot.core.domain
    crypto_ai_bot.core.application
    crypto_ai_bot.utils
forbidden_modules =
    os
ignore_imports =
    crypto_ai_bot.core.infrastructure.settings -> os

[contract:no_blocking_io_in_domain]
name = No blocking I/O in domain/application
type = forbidden
source_modules =
    crypto_ai_bot.core.domain
    crypto_ai_bot.core.application
forbidden_modules =
    requests
    sqlite3
    redis
    httpx
    urllib

# ═══════════════════════════════════════════════════════
# BUSINESS RULES
# ═══════════════════════════════════════════════════════
[contract:single_execute_trade_path]
name = Only execute_trade can place orders
type = forbidden
source_modules =
    crypto_ai_bot.core.application.orchestrator
    crypto_ai_bot.core.application.reconciliation
    crypto_ai_bot.core.application.monitoring
forbidden_modules =
    crypto_ai_bot.core.application.use_cases.place_order
ignore_imports =
    crypto_ai_bot.core.application.use_cases.execute_trade -> *

[contract:risk_centralization]
name = Risk logic must go through RiskManager
type = forbidden
source_modules =
    crypto_ai_bot.core.application.use_cases
    crypto_ai_bot.core.application.orchestrator
forbidden_modules =
    crypto_ai_bot.core.domain.risk.rules
ignore_imports =
    crypto_ai_bot.core.domain.risk.manager -> *

# ═══════════════════════════════════════════════════════
# TELEGRAM RULES
# ═══════════════════════════════════════════════════════
[contract:telegram_separation]
name = Telegram bot and alerts are separate
type = forbidden
source_modules =
    crypto_ai_bot.app.adapters.telegram_bot
forbidden_modules =
    crypto_ai_bot.app.subscribers.telegram_alerts

[contract:telegram_only_in_app]
name = Telegram only in app layer
type = forbidden
source_modules =
    crypto_ai_bot.core.application
    crypto_ai_bot.core.domain
    crypto_ai_bot.core.infrastructure
forbidden_modules =
    crypto_ai_bot.app.adapters.telegram_bot
    crypto_ai_bot.app.subscribers.telegram_alerts

# ═══════════════════════════════════════════════════════
# UTILS INDEPENDENCE
# ═══════════════════════════════════════════════════════
[contract:utils_are_standalone]
name = Utils cannot depend on business logic
type = forbidden
source_modules =
    crypto_ai_bot.utils
forbidden_modules =
    crypto_ai_bot.core.domain
    crypto_ai_bot.core.application
    crypto_ai_bot.core.infrastructure
    crypto_ai_bot.app

[whitelist]
modules =
    tests
    scripts
    crypto_ai_bot.core.infrastructure.storage.migrations
    crypto_ai_bot.__init__