[importlinter]
root_package = crypto_ai_bot
include_external_packages = False
cache_dir = .import_linter_cache

[settings]
# ═══════════════════════════════════════════════════════════════════════════════
# CRYPTO AI BOT ARCHITECTURE CONTRACTS
# ═══════════════════════════════════════════════════════════════════════════════

# ───────────────────────────────────────────────────────────────────────────────
# CLEAN ARCHITECTURE LAYERS (strictest first)
# ───────────────────────────────────────────────────────────────────────────────
[contract:layers_clean_arch]
name = Clean architecture layers (outer → inner)
type = layers
layers =
    crypto_ai_bot.app
    crypto_ai_bot.core.infrastructure
    crypto_ai_bot.core.application
    crypto_ai_bot.core.domain
ignore_imports =
    tests -> *
    scripts -> *
    crypto_ai_bot.core.infrastructure.storage.migrations -> *

# ───────────────────────────────────────────────────────────────────────────────
# DOMAIN PURITY (business logic only)
# ───────────────────────────────────────────────────────────────────────────────
[contract:domain_must_be_pure]
name = Domain cannot depend on outer layers
type = forbidden
source_modules =
    crypto_ai_bot.core.domain
forbidden_modules =
    crypto_ai_bot.core.application
    crypto_ai_bot.core.infrastructure
    crypto_ai_bot.app

[contract:domain_subpackages_are_pure]
name = Domain subpackages must be pure
type = forbidden
source_modules =
    crypto_ai_bot.core.domain.strategies
    crypto_ai_bot.core.domain.signals
    crypto_ai_bot.core.domain.risk
    crypto_ai_bot.core.domain.macro
forbidden_modules =
    crypto_ai_bot.core.infrastructure
    crypto_ai_bot.core.application
    crypto_ai_bot.app

# ───────────────────────────────────────────────────────────────────────────────
# APPLICATION LAYER RULES (use cases and orchestration)
# ───────────────────────────────────────────────────────────────────────────────
[contract:application_cannot_depend_on_infra]
name = Application cannot depend on infrastructure
type = forbidden
source_modules =
    crypto_ai_bot.core.application
forbidden_modules =
    crypto_ai_bot.core.infrastructure
    crypto_ai_bot.app
ignore_imports =
    crypto_ai_bot.core.application.ports -> *

[contract:application_uses_only_ports]
name = Application can only import infrastructure via ports
type = forbidden
source_modules =
    crypto_ai_bot.core.application.use_cases
    crypto_ai_bot.core.application.orchestrator
    crypto_ai_bot.core.application.reconciliation
    crypto_ai_bot.core.application.monitoring
    crypto_ai_bot.core.application.regime
forbidden_modules =
    crypto_ai_bot.core.infrastructure.brokers
    crypto_ai_bot.core.infrastructure.storage
    crypto_ai_bot.core.infrastructure.events
    crypto_ai_bot.core.infrastructure.market_data
    crypto_ai_bot.core.infrastructure.safety
    crypto_ai_bot.core.infrastructure.macro

# ───────────────────────────────────────────────────────────────────────────────
# PORTS PURITY (interfaces only)
# ───────────────────────────────────────────────────────────────────────────────
[contract:ports_are_pure]
name = Ports cannot import concrete implementations
type = forbidden
source_modules =
    crypto_ai_bot.core.application.ports
forbidden_modules =
    crypto_ai_bot.core.infrastructure
    crypto_ai_bot.app

# ───────────────────────────────────────────────────────────────────────────────
# ORCHESTRATOR ISOLATION (coordination layer)
# ───────────────────────────────────────────────────────────────────────────────
[contract:orchestrator_is_leaf]
name = Orchestrator must not be imported (only wired in app)
type = forbidden
source_modules =
    crypto_ai_bot.core.application.use_cases
    crypto_ai_bot.core.application.reconciliation
    crypto_ai_bot.core.application.monitoring
    crypto_ai_bot.core.infrastructure
forbidden_modules =
    crypto_ai_bot.core.application.orchestrator
ignore_imports =
    crypto_ai_bot.app -> crypto_ai_bot.core.application.orchestrator

# ───────────────────────────────────────────────────────────────────────────────
# INFRASTRUCTURE RULES
# ───────────────────────────────────────────────────────────────────────────────
[contract:infra_depends_only_on_ports]
name = Infrastructure can only import application ports
type = forbidden
source_modules =
    crypto_ai_bot.core.infrastructure
forbidden_modules =
    crypto_ai_bot.core.application.use_cases
    crypto_ai_bot.core.application.orchestrator
    crypto_ai_bot.core.application.reconciliation
    crypto_ai_bot.core.application.monitoring
    crypto_ai_bot.core.application.regime
ignore_imports =
    crypto_ai_bot.core.application.ports -> *
    crypto_ai_bot.core.application.events_topics -> *

[contract:infra_sections_independent]
name = Infrastructure sections are independent
type = independence
modules =
    crypto_ai_bot.core.infrastructure.brokers
    crypto_ai_bot.core.infrastructure.storage
    crypto_ai_bot.core.infrastructure.events
    crypto_ai_bot.core.infrastructure.market_data
    crypto_ai_bot.core.infrastructure.safety
    crypto_ai_bot.core.infrastructure.macro

# ───────────────────────────────────────────────────────────────────────────────
# CRYPTO TRADING SPECIFIC RULES
# ───────────────────────────────────────────────────────────────────────────────
[contract:no_direct_ccxt_in_domain]
name = Domain cannot import CCXT directly
type = forbidden
source_modules =
    crypto_ai_bot.core.domain
    crypto_ai_bot.core.application
forbidden_modules =
    ccxt

[contract:no_direct_ccxt_in_utils]
name = Utils cannot import CCXT (broker responsibility)
type = forbidden
source_modules =
    crypto_ai_bot.utils
forbidden_modules =
    ccxt

[contract:settings_centralization]
name = Only settings module can import os/environ
type = forbidden
source_modules =
    crypto_ai_bot.core.domain
    crypto_ai_bot.core.application
    crypto_ai_bot.utils
forbidden_modules =
    os
ignore_imports =
    crypto_ai_bot.core.infrastructure.settings -> os

[contract:no_blocking_io_in_domain_application]
name = No blocking I/O libraries in domain/application
type = forbidden
source_modules =
    crypto_ai_bot.core.domain
    crypto_ai_bot.core.application
forbidden_modules =
    requests
    sqlite3
    redis
    httpx
    urllib

# ───────────────────────────────────────────────────────────────────────────────
# TRADING BUSINESS RULES
# ───────────────────────────────────────────────────────────────────────────────
[contract:single_execute_trade_path]
name = Only execute_trade can place orders
type = forbidden
source_modules =
    crypto_ai_bot.core.application.orchestrator
    crypto_ai_bot.core.application.reconciliation
    crypto_ai_bot.core.application.monitoring
forbidden_modules =
    crypto_ai_bot.core.application.use_cases.place_order
ignore_imports =
    crypto_ai_bot.core.application.use_cases.execute_trade -> *

[contract:risk_centralization]
name = Risk logic must go through RiskManager
type = forbidden
source_modules =
    crypto_ai_bot.core.application.use_cases
    crypto_ai_bot.core.application.orchestrator
forbidden_modules =
    crypto_ai_bot.core.domain.risk.rules
ignore_imports =
    crypto_ai_bot.core.domain.risk.manager -> *

[contract:pnl_calculation_centralized]
name = PnL calculations only in utils.pnl
type = forbidden
source_modules =
    crypto_ai_bot.core.domain
    crypto_ai_bot.core.application
    crypto_ai_bot.core.infrastructure
forbidden_modules =
    crypto_ai_bot.utils.pnl
ignore_imports =
    crypto_ai_bot.core.infrastructure.storage.repositories.trades -> crypto_ai_bot.utils.pnl

# ───────────────────────────────────────────────────────────────────────────────
# EVENT SYSTEM RULES
# ───────────────────────────────────────────────────────────────────────────────
[contract:event_topics_centralized]
name = Event topics defined only in application layer
type = forbidden
source_modules =
    crypto_ai_bot.core.domain
    crypto_ai_bot.core.infrastructure
forbidden_modules =
    crypto_ai_bot.core.application.events_topics
ignore_imports =
    crypto_ai_bot.core.infrastructure.events -> crypto_ai_bot.core.application.events_topics

[contract:no_direct_bus_in_domain]
name = Domain cannot publish events directly
type = forbidden
source_modules =
    crypto_ai_bot.core.domain
forbidden_modules =
    crypto_ai_bot.core.application.ports
    crypto_ai_bot.core.infrastructure.events

# ───────────────────────────────────────────────────────────────────────────────
# TELEGRAM INTEGRATION RULES
# ───────────────────────────────────────────────────────────────────────────────
[contract:telegram_separation]
name = Telegram bot and alerts are separate concerns
type = forbidden
source_modules =
    crypto_ai_bot.app.adapters.telegram_bot
forbidden_modules =
    crypto_ai_bot.app.subscribers.telegram_alerts

[contract:telegram_only_in_app]
name = Telegram integrations only in app layer
type = forbidden
source_modules =
    crypto_ai_bot.core.application
    crypto_ai_bot.core.domain
    crypto_ai_bot.core.infrastructure
forbidden_modules =
    crypto_ai_bot.app.adapters.telegram_bot
    crypto_ai_bot.app.subscribers.telegram_alerts

# ───────────────────────────────────────────────────────────────────────────────
# STRATEGY SYSTEM RULES
# ───────────────────────────────────────────────────────────────────────────────
[contract:strategy_inheritance]
name = All strategies must inherit from base
type = forbidden
source_modules =
    crypto_ai_bot.core.domain.strategies.ema_cross
    crypto_ai_bot.core.domain.strategies.ema_atr
    crypto_ai_bot.core.domain.strategies.rsi_momentum
    crypto_ai_bot.core.domain.strategies.bollinger_bands
    crypto_ai_bot.core.domain.strategies.signals_policy_strategy
forbidden_modules =
    crypto_ai_bot.core.infrastructure
    crypto_ai_bot.core.application
ignore_imports =
    crypto_ai_bot.core.domain.strategies.base -> *

[contract:strategy_manager_centralized]
name = Strategy coordination only through manager
type = forbidden
source_modules =
    crypto_ai_bot.core.application
forbidden_modules =
    crypto_ai_bot.core.domain.strategies.ema_cross
    crypto_ai_bot.core.domain.strategies.ema_atr
    crypto_ai_bot.core.domain.strategies.rsi_momentum
    crypto_ai_bot.core.domain.strategies.bollinger_bands
ignore_imports =
    crypto_ai_bot.core.domain.strategies.strategy_manager -> *

# ───────────────────────────────────────────────────────────────────────────────
# CLI INDEPENDENCE
# ───────────────────────────────────────────────────────────────────────────────
[contract:cli_independence]
name = CLI modules are independent
type = independence
modules =
    crypto_ai_bot.cli.smoke
    crypto_ai_bot.cli.reconcile
    crypto_ai_bot.cli.performance
    crypto_ai_bot.cli.maintenance
    crypto_ai_bot.cli.health_monitor

# ───────────────────────────────────────────────────────────────────────────────
# UTILS INDEPENDENCE
# ───────────────────────────────────────────────────────────────────────────────
[contract:utils_are_standalone]
name = Utils cannot depend on core business logic
type = forbidden
source_modules =
    crypto_ai_bot.utils
forbidden_modules =
    crypto_ai_bot.core.domain
    crypto_ai_bot.core.application
    crypto_ai_bot.core.infrastructure
    crypto_ai_bot.app

[whitelist]
modules =
    tests
    scripts
    crypto_ai_bot.core.infrastructure.storage.migrations
    crypto_ai_bot.__init__
