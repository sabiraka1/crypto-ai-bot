# signal_analyzer.py

import pandas as pd
import os

CSV_FILE = "sinyal_fiyat_analizi.csv"

def analyze_bad_signals(limit=5):
    if not os.path.exists(CSV_FILE):
        print("‚ö†Ô∏è CSV-—Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return None, None

    df = pd.read_csv(CSV_FILE)
    if len(df) < 10:
        print("‚ö†Ô∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.")
        return None, None

    bad_signals = df[df["success"] == 0].copy()
    if bad_signals.empty:
        return None, None

    # === –û–±—â–∞—è —Å–≤–æ–¥–∫–∞ ===
    summary = {
        "‚ùå –í—Å–µ–≥–æ –Ω–µ—É–¥–∞—á–Ω—ã—Ö —Å–∏–≥–Ω–∞–ª–æ–≤": len(bad_signals),
        "üìâ –°—Ä–µ–¥–Ω–∏–π RSI": round(bad_signals["rsi"].mean(), 2),
        "üìâ –°—Ä–µ–¥–Ω–∏–π MACD": round(bad_signals["macd"].mean(), 4),
        "üìä –°—Ä–µ–¥–Ω–∏–π ADX": round(bad_signals["adx"].mean(), 2),
        "üíπ –°—Ä–µ–¥–Ω–∏–π StochRSI": round(bad_signals["stochrsi"].mean(), 2),
        "‚öñÔ∏è BUY –æ—à–∏–±–æ–∫": len(bad_signals[bad_signals["signal"] == "BUY"]),
        "‚öñÔ∏è SELL –æ—à–∏–±–æ–∫": len(bad_signals[bad_signals["signal"] == "SELL"])
    }

    # === –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏ ===
    explanations = []
    for _, row in bad_signals.tail(limit).iterrows():
        reason = explain_signal(row)
        explanations.append(reason)

    return summary, explanations


def explain_signal(row):
    signal = row["signal"]
    rsi = row["rsi"]
    macd = row["macd"]
    score = row.get("score", 0.0)
    price = row.get("price", 0.0)
    adx = row.get("adx", 0)
    stoch = row.get("stochrsi", 0)
    ema = row.get("ema_signal", "")
    boll = row.get("bollinger", "")
    pattern = row.get("pattern", "")

    comments = []

    if signal == "BUY":
        if rsi > 65:
            comments.append("RSI –±—ã–ª –≤—ã—Å–æ–∫–∏–º")
        if macd < 0:
            comments.append("MACD –±—ã–ª –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º")
        if ema != "bullish":
            comments.append("EMA crossover –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω")
        if boll != "low":
            comments.append("–¶–µ–Ω–∞ –Ω–µ —É –Ω–∏–∂–Ω–µ–π –≥—Ä–∞–Ω–∏—Ü—ã Bollinger")
        if adx < 20:
            comments.append("ADX –ø–æ–∫–∞–∑–∞–ª —Å–ª–∞–±—ã–π —Ç—Ä–µ–Ω–¥")
        if stoch > 80:
            comments.append("StochRSI –±—ã–ª –ø–µ—Ä–µ–∫—É–ø–ª–µ–Ω")
        if score < 0.6:
            comments.append("AI –¥–∞–ª —Å–ª–∞–±—É—é –æ—Ü–µ–Ω–∫—É")
        if not comments:
            comments.append("—Ä—ã–Ω–æ–∫ –ø–æ—à—ë–ª –ø—Ä–æ—Ç–∏–≤ —Å–∏–≥–Ω–∞–ª–∞")
        return f"‚ùå BUY @ {price:.2f} ‚Äî {'; '.join(comments)}"

    elif signal == "SELL":
        if rsi < 35:
            comments.append("RSI –±—ã–ª —Å–ª–∏—à–∫–æ–º –Ω–∏–∑–∫–∏–º")
        if macd > 0:
            comments.append("MACD –±—ã–ª –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º")
        if ema != "bearish":
            comments.append("EMA crossover –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω")
        if boll != "high":
            comments.append("–¶–µ–Ω–∞ –Ω–µ —É –≤–µ—Ä—Ö–Ω–µ–π –≥—Ä–∞–Ω–∏—Ü—ã Bollinger")
        if adx < 20:
            comments.append("ADX –ø–æ–∫–∞–∑–∞–ª —Å–ª–∞–±—ã–π —Ç—Ä–µ–Ω–¥")
        if stoch < 20:
            comments.append("StochRSI –±—ã–ª –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–Ω")
        if score < 0.6:
            comments.append("AI –¥–∞–ª —Å–ª–∞–±—É—é –æ—Ü–µ–Ω–∫—É")
        if not comments:
            comments.append("—Ä—ã–Ω–æ–∫ –ø–æ—à—ë–ª –ø—Ä–æ—Ç–∏–≤ —Å–∏–≥–Ω–∞–ª–∞")
        return f"‚ùå SELL @ {price:.2f} ‚Äî {'; '.join(comments)}"

    return f"‚ùå –ù–µ—É–¥–∞—á–Ω—ã–π —Å–∏–≥–Ω–∞–ª @ {price:.2f}"
